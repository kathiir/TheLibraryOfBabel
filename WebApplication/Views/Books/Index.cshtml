@model WebApplication.Utils.PaginatedList<WebApplication.Models.BookViewModel>

@{
    ViewData["Title"] = "Books Page";
}

<div class="jumbotron">
    <h1 class="display-3">Books</h1>
    <hr class="my-4">
    <p class="lead">
        <a class="btn btn-primary btn-lg" href="~/Books/Book/" role="button">Add Book</a>
    </p>
</div>

<form method="get">
    <div>
        <input class="form-control mb-4" id="search" name="search" type="text" placeholder="Search.." value="@ViewData["searchFilt"]">
    </div>

    <div class="my-4">
        <h3>Filter</h3>
        <div>
            <label for="authorsFilter" class="col-form-label float-left">Authors:</label>
            <div>
                <select id="authorsFilter" name="authorsFilter" class="form-control" multiple>
                    @foreach (var author in ViewData["Authors"] as List<AuthorViewModel>)
                    {
                        @:<option value="@author.Id"
                        if ((ViewData["authorFilt"] as int[]).Any(a => author.Id == a))
                        {
                            @:selected
                        }
                        @: >@author.Name</option>
                    }
                </select>
            </div>
            <label for="genreFilter" class="col-form-label float-left">Genres:</label>
            <div>
                <select id="genreFilter" name="genreFilter" class="form-control" multiple>
                    @foreach (var item in ViewData["Genres"] as List<GenreViewModel>)
                    {
                        @:<option value="@item.Id"
                        if ((ViewData["genreFilt"] as int[]).Any(a => item.Id == a))
                        {
                            @:selected
                        }
                        @: >@item.Name</option>
                    }
                </select>
            </div>
        </div>
    </div>
</form>


<table class="text-center table table-striped">
    <thead class="thead-light">
    <th scope="col">
        <a asp-action="Index"
           asp-route-sortBy="name_@ViewData["nameOrder"]"
           asp-route-authorsFilter="@ViewData["authorFiltString"]"
           asp-route-genreFilter="@ViewData["genreFiltString"]"
           asp-route-pageNumber="@ViewData["page"]"
           asp-route-search="@ViewData["searchFilt"]">
            Name
        </a>
    </th>
    <th scope="col">
        <a asp-action="Index"
           asp-route-sortBy="authors_@ViewData["authorsOrder"]"
           asp-route-authorsFilter="@ViewData["authorFiltString"]"
           asp-route-genreFilter="@ViewData["genreFiltString"]"
           asp-route-pageNumber="@ViewData["page"]"
           asp-route-search="@ViewData["searchFilt"]">
        Authors
        </a>
    </th>
    <th scope="col">
        <a asp-action="Index"
           asp-route-sortBy="remain_@ViewData["remainOrder"]"
           asp-route-authorsFilter="@ViewData["authorFiltString"]"
           asp-route-genreFilter="@ViewData["genreFiltString"]"
           asp-route-pageNumber="@ViewData["page"]"
           asp-route-search="@ViewData["searchFilt"]">
        Remains
        </a>
    </th>
    <th scope="col">
        <a asp-action="Index"
           asp-route-sortBy="number_@ViewData["numberOrder"]"
           asp-route-authorsFilter="@ViewData["authorFiltString"]"
           asp-route-genreFilter="@ViewData["genreFiltString"]"
           asp-route-pageNumber="@ViewData["page"]"
           asp-route-search="@ViewData["searchFilt"]">
        Number Of Copies
        </a>
    </th>
    <th scope="col">
        <a asp-action="Index"
           asp-route-sortBy="genre_@ViewData["genreOrder"]"
           asp-route-authorsFilter="@ViewData["authorFiltString"]"
           asp-route-genreFilter="@ViewData["genreFiltString"]"
           asp-route-pageNumber="@ViewData["page"]"
           asp-route-search="@ViewData["searchFilt"]">
            Genre
        </a>
    </th>
    <th scope="col">
        Delete
    </th>
    </thead>
    <tbody>

    @foreach (var book in ViewData.Model)
    {
        <tr data-genre="@book.Genre?.Id" class="rows">
            <td>
                <a asp-route-id="@book.Id" asp-action="Book">
                    @book.Name
                </a>
            </td>
            <td>
                @book.GetAuthors()
            </td>
            <td>
                @book.NumberOfCopiesCurrent
            </td>
            <td>
                @book.NumberOfCopies
            </td>
            <td>
                @book.Genre?.Name
            </td>
            <td>
                <a href="~/Books/RemoveBook/?id=@book.Id" class="btn btn-outline-danger">
                    Remove
                </a>
            </td>
        </tr>
    }
    </tbody>
</table>

@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<a asp-action="Index"
   asp-route-sortBy="@ViewData["orderBy"]_@ViewData["genreOrder"]"
   asp-route-authorsFilter="@ViewData["authorFiltString"]"
   asp-route-genreFilter="@ViewData["genreFiltString"]"
   asp-route-search="@ViewData["searchFilt"]"
   asp-route-pageNumber="@(Model.PageIndex - 1)"
   class="btn btn-default @prevDisabled">
    Previous
</a>
<a asp-action="Index"
   asp-route-sortBy="@ViewData["orderBy"]_@ViewData["genreOrder"]"
   asp-route-authorsFilter="@ViewData["authorFiltString"]"
   asp-route-genreFilter="@ViewData["genreFiltString"]"
   asp-route-search="@ViewData["searchFilt"]"   
   asp-route-pageNumber="@(Model.PageIndex + 1)"
   class="btn btn-default @nextDisabled">
    Next
</a>

@section Scripts {
    <script>
        $(document).ready(function () {
            $('#authorsFilter').select2({
                multiple: true
            });
        });
    </script>

    <script>
        $(document).ready(function () {
            $('#genreFilter').select2({
                multiple: true
            });
        });
    </script>
}

